{"version":3,"sources":["components/LoginForm.js","components/EmployeeList.js","App.js","index.js"],"names":["LoginForm","_ref","onLoginSuccess","credentials","setCredentials","useState","username","password","error","setError","handleInputChange","e","name","value","target","prevState","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","localStorage","setItem","token","err","id","type","placeholder","onChange","required","EmployeeList","employees","setEmployees","useEffect","getItem","concat","then","status","catch","console","map","employee","firstName","lastName","employeeId","App","setToken","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"mKAuEeA,MApEf,SAAkBC,GAAsB,IAArB,eAAEC,GAAgBD,EACnC,MAAOE,EAAaC,GAAkBC,mBAAS,CAAEC,SAAU,GAAIC,SAAU,MAClEC,EAAOC,GAAYJ,mBAAS,IAE7BK,EAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BV,GAAeW,IAAS,IAAUA,EAAW,CAACH,GAAOC,KAAS,EAgChE,OACEG,cAAA,OAAKC,UAAU,kBAAiBC,SAC9BC,eAAA,QAAMF,UAAU,aAAaG,SA/BZC,UACnBV,EAAEW,iBACF,IAEE,MAAMC,QAAiBC,MAAM,oCAAqC,CAChEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,mBAChC,8BAA8B,KACzBC,KAAMC,KAAKC,UAAU1B,KAIvB,IAAKoB,EAASO,GAAI,CAEhB,MAAMC,QAAkBR,EAASS,OACjC,MAAM,IAAIC,MAAMF,EAAUG,SAAW,eACvC,CAGA,MAAMC,QAAaZ,EAASS,OAC5BI,aAAaC,QAAQ,QAASF,EAAKG,OACnCpC,EAAeiC,EAAKG,MAEtB,CAAE,MAAOC,GAEP9B,EAAS8B,EAAIL,QACf,GAKsDhB,SAAA,CAClDF,cAAA,SACEC,UAAU,cACVuB,GAAG,WACH5B,KAAK,WACL6B,KAAK,OACLC,YAAY,WACZ7B,MAAOV,EAAYG,SACnBqC,SAAUjC,EACVkC,UAAQ,IAEV5B,cAAA,SACEC,UAAU,cACVuB,GAAG,WACH5B,KAAK,WACL6B,KAAK,WACLC,YAAY,WACZ7B,MAAOV,EAAYI,SACnBoC,SAAUjC,EACVkC,UAAQ,IAEV5B,cAAA,UAAQC,UAAU,eAAewB,KAAK,SAAQvB,SAAC,UAC9CV,GAASQ,cAAA,OAAKC,UAAU,QAAOC,SAAEV,QAI1C,ECjBeqC,MAlDf,WACE,MAAOC,EAAWC,GAAgB1C,mBAAS,KACpCG,EAAOC,GAAYJ,mBAAS,IAiCnC,OA/BA2C,qBAAU,KACR,MAAMV,EAAQF,aAAaa,QAAQ,SAE9BX,EAKLd,MAAM,wCAAyC,CAC7CC,OAAQ,MACRC,QAAS,CACP,cAAgB,UAADwB,OAAYZ,GAC3B,eAAgB,sBAGnBa,MAAK5B,IACJ,IAAKA,EAASO,GAEZ,MAAM,IAAIG,MAAM,eAADiB,OAAgB3B,EAAS6B,SAE1C,OAAO7B,EAASS,MAAM,IAEvBmB,MAAKhB,IACJY,EAAaZ,EAAK,IAEnBkB,OAAM7C,IACL8C,QAAQ9C,MAAM,uBAAwBA,GACtCC,EAAS,6BAA6B,IAvBtCA,EAAS,0CAwBT,GACD,IAGDU,eAAA,OAAAD,SAAA,CACEF,cAAA,MAAAE,SAAI,kBACHV,GAASQ,cAAA,OAAKC,UAAU,QAAOC,SAAEV,IAClCQ,cAAA,MAAAE,SACG4B,EAAUS,KAAIC,GACbrC,eAAA,MAAAD,SAAA,CACGsC,EAASC,UAAU,IAAED,EAASE,WADxBF,EAASG,kBAO5B,ECvBeC,MAtBf,WACE,MAAOtB,EAAOuB,GAAYxD,mBAAS+B,aAAaa,QAAQ,UAOxD,OACE9B,eAAA,OAAKF,UAAU,MAAKC,SAAA,CAClBF,cAAA,OAAKC,UAAU,SAAQC,SACrBF,cAAA,MAAIC,UAAU,OAAMC,SAAC,oBAEtBoB,EACCtB,cAAC6B,EAAY,IAEb7B,cAAChB,EAAS,CAACE,eAbWoC,IAC1BuB,EAASvB,GACTF,aAAaC,QAAQ,QAASC,EAAM,MAexC,ECpBAwB,IAASC,OACP/C,cAACgD,IAAMC,WAAU,CAAA/C,SACfF,cAAC4C,EAAG,MAENM,SAASC,eAAe,Q","file":"static/js/main.4b81e4b3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../App.css'; // Make sure the path is correct for your project structure\n\nfunction LoginForm({ onLoginSuccess }) {\n  const [credentials, setCredentials] = useState({ username: '', password: '' });\n  const [error, setError] = useState('');\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCredentials(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Here's where you make the call to your API endpoint for login\n      const response = await fetch('http://192.168.1.31:8080/v2/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' ,\n   'Access-Control-Allow-Origin':'*'},\n        body: JSON.stringify(credentials),\n      });\n\n      // Check if the response from the server is ok (status code 200)\n      if (!response.ok) {\n        // If the server response is not OK, extract the error message from the response\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Login failed');\n      }\n\n      // If the response is ok, extract the token from the response data\n      const data = await response.json();\n      localStorage.setItem('token', data.token); // Store the token in local storage\n      onLoginSuccess(data.token); // Call the onLoginSuccess callback with the token\n\n    } catch (err) {\n      // If there's an error, set the error state with the error message\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <form className=\"login-form\" onSubmit={handleSubmit}>\n        <input\n          className=\"login-input\"\n          id=\"username\"\n          name=\"username\"\n          type=\"text\"\n          placeholder=\"Username\"\n          value={credentials.username}\n          onChange={handleInputChange}\n          required\n        />\n        <input\n          className=\"login-input\"\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={credentials.password}\n          onChange={handleInputChange}\n          required\n        />\n        <button className=\"login-button\" type=\"submit\">Login</button>\n        {error && <div className=\"error\">{error}</div>}\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n\n\n\n\n/*import React, { useState } from 'react';\n\nfunction LoginForm({ onLoginSuccess }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    // Post request to backend\n    try {\n      const response = await fetch('http://localhost:8080/v2/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data.token); // Adjust according to your response structure\n        onLoginSuccess(data.token);\n      } else {\n        throw new Error(data.message || 'Login failed');\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleLogin}>\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          placeholder=\"Username\"\n          required\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          required\n        />\n        <button type=\"submit\">Login</button>\n        {error && <p>{error}</p>}\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n*/","import React, { useState, useEffect } from 'react';\n\nfunction EmployeeList() {\n  const [employees, setEmployees] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token'); // Get the token from local storage\n\n    if (!token) {\n      setError('No authentication token. Please log in.');\n      return;\n    }\n\n    fetch('http://192.168.1.31:8080/v2/employees', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}`, // Use the token for authorization\n        'Content-Type': 'application/json',\n      },\n    })\n    .then(response => {\n      if (!response.ok) {\n        // If response is not OK, throw an error\n        throw new Error(`HTTP status ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(data => {\n      setEmployees(data); // Set the employees data on state\n    })\n    .catch(error => {\n      console.error('Failed to fetch12qw:', error);\n      setError('Failed to fetch employees.'); // Set an error message on state\n    });\n  }, []);\n\n  return (\n    <div>\n      <h1>Employee List</h1>\n      {error && <div className=\"error\">{error}</div>}\n      <ul>\n        {employees.map(employee => (\n          <li key={employee.employeeId}>\n            {employee.firstName} {employee.lastName}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default EmployeeList;\n\n/*import React, { useState, useEffect } from 'react';\n\nfunction EmployeeList() {\n  const [employees, setEmployees] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const token = ''; // Replace with your actual token from authentication\n    fetch('http://localhost:8080/v2/employees', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}` // Include the authorization header\n      },\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP status ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(data => setEmployees(data))\n    .catch(error => {\n      console.error('Fetch error:', error);\n      setError(error.message);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h1>Employee List</h1>\n      {error && <p>Error: {error}</p>}\n      <ul>\n        {employees.map(employee => (\n          <li key={employee.employeeId}>{employee.firstName} {employee.lastName}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default EmployeeList;\n*/\n\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n\n// function EmployeeList() {\n//   const [employees, setEmployees] = useState([]);\n\n//   useEffect(() => {\n//     fetch('/v2/employees')\n//       .then(response => response.json())\n//       .then(data => setEmployees(data))\n//       .catch(error => console.error('Error:', error));\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>Employee List</h1>\n//       <ul>\n//         {employees.map(employee => (\n//           <li key={employee.id}>\n//             {employee.name} - <Link to={`/employee/${employee.id}`}>View Profile</Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default EmployeeList;\n","import React, { useState } from 'react';\nimport LoginForm from './components/LoginForm';\nimport EmployeeList from './components/EmployeeList';\nimport './App.css'; // Make sure to import the CSS file\n\nfunction App() {\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  const handleLoginSuccess = (token) => {\n    setToken(token);\n    localStorage.setItem('token', token); // Save the token in local storage\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1 className=\"logo\">KubeCloudsInc</h1>\n      </div>\n      {token ? (\n        <EmployeeList />\n      ) : (\n        <LoginForm onLoginSuccess={handleLoginSuccess} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n/*import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport EmployeeList from './components/EmployeeList';\nimport EmployeeProfile from './components/EmployeeProfile';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/\" exact component={EmployeeList} />\n          <Route path=\"/employee/:id\" component={EmployeeProfile} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n*/\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}